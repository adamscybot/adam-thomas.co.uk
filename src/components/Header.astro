---
import { Icon } from 'astro-icon'
import PageLink from './PageLink.astro'
import { css } from '../styled-system/css'
import type { HTMLAttributes } from 'astro/types'
import { BehaviourAttributes, asProp } from '../consts'

type Props = HTMLAttributes<'header'>

const { ...props } = Astro.props
---

<script>
  import { BehaviourAttributes, asSelector } from '../consts'

  const initNavBehaviour = () => {
    const navEl: HTMLElement = document.querySelector(
      asSelector(BehaviourAttributes.NAV),
    )!

    const observer = new IntersectionObserver(
      ([{ intersectionRatio }]) => {
        navEl.style.setProperty(
          '--nav-intersection-ratio',
          String(intersectionRatio),
        )

        if (intersectionRatio >= 1) {
          navEl.removeAttribute(BehaviourAttributes.SCROLLED_BELOW_HEADER)
          return
        }
        navEl.setAttribute(BehaviourAttributes.SCROLLED_BELOW_HEADER, 'true')
      },
      {
        threshold: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],
        root: null,
        rootMargin: '60px',
      },
    )

    if (!CSS.supports('animation-timeline: view()')) {
      observer.observe(navEl)
    }
  }

  document.addEventListener('astro:page-load', initNavBehaviour, {
    once: false,
  })
</script>
<header class={css({ display: 'initial' })} {...props}>
  <div class={css({ mb: '3' })}>
    <h1
      class={css({ textStyle: 'pageTitle', color: 'text.pageTitle', mb: '2' })}
    >
      Adam Thomas.
    </h1>
    <p class={css({ textStyle: 'tagline', color: 'text.tagline', maxW: '96' })}>
      Experienced & collaborative tech lead who also enjoys building & managing
      great teams, with a front end spin.
    </p>
  </div>
  <div
    class={css({ display: 'flex', flexDir: 'row', columnGap: '3', mb: '16' })}
  >
    <a
      href="https://www.linkedin.com/in/adamthomas1/"
      target="_blank"
      aria-label="Visit my LinkedIn"
      class={css({
        h: '16',
        color: 'slate.400',
        _hover: { color: 'slate.100' },
      })}
    >
      <Icon name="icomoon-free:linkedin" class={css({ w: '10' })} />
    </a>
    <a
      href="https://github.com/adamscybot"
      target="_blank"
      aria-label="Visit my GitHub"
      class={css({ color: 'slate.400', _hover: { color: 'slate.100' } })}
    >
      <Icon
        name="icomoon-free:github"
        class={css({
          w: '10',
        })}
      />
    </a>
  </div>
  <div
    {...asProp(BehaviourAttributes.NAV)}
    class={css({
      display: 'initial',
      zIndex: 'nav',
      _oneHanded: {
        _supportsAnimationTimeline: {
          display: 'flex',
          position: 'sticky',
          top: '-16',
          height: '16',
          // @ts-ignore

          viewTimelineName: '[--nav]',
          viewTimelineInset: 'token(spacing.-16)',
        },
      },
    })}
  >
    <div
      class={css({
        display: 'flex',
        height: 'full',
        _noAnimationTimeline: {
          zIndex: '[2]',
          position: 'sticky',
          top: '-16',
        },
      })}
    >
      <div
        class={css({
          display: 'none',
          _oneHanded: {
            display: 'block',
            position: 'fixed',

            left: '0',
            bottom: '0',
            right: '0',
            height: '16',
            pointerEvents: 'none',
            transform: '[translateY(100%)]',
            backdropFilter: '[blur(3px)]',
            mask: '[linear-gradient( to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.7) 20%, rgba(0, 0, 0, 1) 30% )]',
            '[data-has-sub-nav] &': {
              height: '28',
            },
            '[data-scrolled-below-header] &': {
              transition: '[0.1s transform linear]',
              transform:
                '[translateY(calc(100% * var(--nav-intersection-ratio)))]',
            },
            _supportsAnimationTimeline: {
              animation: '[slideup ease forwards]',
              animationTimeline: '[--nav]',
              // @ts-ignore
              animationRange:
                '[exit-crossing 0% exit-crossing token(spacing.16)]',
            },
          },
        })}
      >
      </div>

      <div
        class={css({
          flex: '1',
          _oneHanded: {
            '[data-scrolled-below-header] &': {
              position: 'relative',
              top: '[calc(100vh + token(spacing.16))]',
              transform:
                '[translateY(calc(-100% * calc(1 - var(--nav-intersection-ratio) ) ))]',
              transition: '[0.1s transform linear]',
            },
            _supportsAnimationTimeline: {
              animation: '[slideupAnchoredTop ease forwards]',
              animationTimeline: '[--nav]',
              // @ts-ignore
              animationRange:
                '[exit-crossing 0% exit-crossing token(spacing.16)]',
            },
          },
        })}
      >
        <nav
          aria-label="Primary Navigation"
          class={css({
            flex: '1',
            display: 'flex',
            flexDir: 'column',
            position: 'relative',

            zIndex: 'nav',
          })}
        >
          <div
            class={css({
              display: 'flex',
              flexDir: 'row',
              columnGap: '2',
              justifyContent: 'space-between',
              _oneHanded: {
                '[data-has-sub-nav] [data-scrolled-below-header] &': {
                  transform: '[translateY(20px)]',
                },
                _supportsAnimationTimeline: {
                  animation: '[slideupPrimaryNav ease forwards]',
                  animationTimeline: '[--nav]',
                  // @ts-ignore
                  animationRange:
                    '[exit-crossing 0% exit-crossing token(spacing.1)]',
                },
              },
              sm: {
                justifyContent: 'flex-start',
                columnGap: '3',
              },
            })}
          >
            <PageLink href="/">About</PageLink>
            <PageLink href="/experience">Experience</PageLink>
            <PageLink href="/blog">Thoughts</PageLink>
          </div>
          <nav
            aria-label="Sub Navigation"
            class={css({
              mt: '3',

              display: 'flex',
              flexDir: 'row',
              flexWrap: 'wrap',
              columnGap: '3',
              _oneHanded: {
                '[data-scrolled-below-header] &': {
                  transform: '[translateY(-50px)]',
                },
                _supportsAnimationTimeline: {
                  animation: '[slideupSubNav ease forwards]',
                  animationTimeline: '[--nav]',
                  // @ts-ignore
                  animationRange:
                    '[exit-crossing 0% exit-crossing token(spacing.1)]',
                },
              },

              sm: {
                mt: '4',
                alignSelf: 'flex-end',
              },
            })}
          >
            <slot name="sub-nav" />
          </nav>
        </nav>
      </div>
    </div>
  </div>
</header>

<slot />
