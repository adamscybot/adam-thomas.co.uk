---
import { Icon } from 'astro-icon'
import PageLink from './PageLink.astro'
import { css } from '../styled-system/css'
import type { HTMLAttributes } from 'astro/types'
import { BehaviourAttributes, asProp } from '../consts'

type Props = HTMLAttributes<'header'>

const { ...props } = Astro.props
---

{
  /**
   * If the browser supports CSS animation timelines, this code is exited early. Providing fallback mostly for
   * Safari.
   * */
}
<script>
  import { BehaviourAttributes, asSelector } from '../consts'

  const initNavBehaviour = () => {
    const navEl: HTMLElement = document.querySelector(
      asSelector(BehaviourAttributes.NAV),
    )!

    const navScrolledBelowObserver = new IntersectionObserver(
      ([{ intersectionRatio }]) => {
        console.log(intersectionRatio)
        requestAnimationFrame(() => {
          navEl.style.setProperty(
            '--nav-intersection-ratio',
            String(intersectionRatio),
          )

          if (intersectionRatio >= 1) {
            navEl.removeAttribute(BehaviourAttributes.NAV_SCROLL_POS_IS_BELOW)
            return
          }
          navEl.setAttribute(
            BehaviourAttributes.NAV_SCROLL_POS_IS_BELOW,
            'below-nav',
          )
        })
      },
      {
        threshold: [0, 0.4, 0.6, 0.8, 1],
        root: null,
        rootMargin: '60px',
      },
    )

    const navStuckObserver = new IntersectionObserver(
      ([{ intersectionRatio }]) => {
        if (intersectionRatio < 1) {
          navEl.setAttribute(BehaviourAttributes.NAV_IS_STUCK, 'true')
          return
        }

        navEl.removeAttribute(BehaviourAttributes.NAV_IS_STUCK)
      },
      {
        threshold: [1],
        root: null,
        rootMargin: '-1px 0px 0px 0px',
      },
    )

    if (!CSS.supports('animation-timeline: view()')) {
      navScrolledBelowObserver.observe(navEl)
      navStuckObserver.observe(navEl)
    }
  }

  document.addEventListener('astro:page-load', initNavBehaviour, {
    once: false,
  })
</script>
<header class={css({ display: 'initial' })} {...props}>
  <div class={css({ mb: '3' })}>
    <h1
      class={css({ textStyle: 'pageTitle', color: 'text.pageTitle', mb: '2' })}
    >
      Adam Thomas.
    </h1>
    <p class={css({ textStyle: 'tagline', color: 'text.tagline', maxW: '96' })}>
      Experienced & collaborative tech lead who also enjoys building & managing
      great teams, with a front end spin.
    </p>
  </div>
  <div
    class={css({ display: 'flex', flexDir: 'row', columnGap: '3', mb: '16' })}
  >
    <a
      href="https://www.linkedin.com/in/adamthomas1/"
      target="_blank"
      aria-label="Visit my LinkedIn"
      class={css({
        h: '16',
        color: 'slate.400',
        _hover: { color: 'slate.100' },
      })}
    >
      <Icon name="icomoon-free:linkedin" class={css({ w: '10' })} />
    </a>
    <a
      href="https://github.com/adamscybot"
      target="_blank"
      aria-label="Visit my GitHub"
      class={css({ color: 'slate.400', _hover: { color: 'slate.100' } })}
    >
      <Icon
        name="icomoon-free:github"
        class={css({
          w: '10',
        })}
      />
    </a>
  </div>
  <div
    {...asProp(BehaviourAttributes.NAV)}
    class={css({
      zIndex: 'nav',

      _notOneHanded: {
        display: 'block',
        paddingTop: '5',
        position: 'sticky',
        top: '-1',
      },

      _supportsAnimationTimeline: {
        // @ts-ignore
        viewTimelineName: '[--nav]',
      },

      _before: {
        content: "['']",
        display: 'block',
        position: 'fixed',
        left: '0',
        top: '-3',
        right: '0',
        height: '36',
        pointerEvents: 'none',
        background:
          '[linear-gradient(180deg, rgba(2,0,36,0.7) 0%, rgba(2,6,23,0.7) 80%, rgba(0,0,0,0) 100%)]',
        opacity: '[0]',

        _supportsAnimationTimeline: {
          animation: '[navMask ease forwards]',
          animationTimeline: '[--nav]',
          // @ts-ignore
          animationRange: '[exit-crossing 0% exit-crossing 200px]',
        },
      },

      _oneHanded: {
        paddingTop: '0',
        display: 'initial',
        _before: {
          top: '[unset]',
          height: '24',
          bottom: '0',
          background:
            '[linear-gradient(0deg, rgba(2,0,36,0.7) 0%, rgba(2,6,23,0.7) 80%, rgba(0,0,0,0) 100%)]',
        },
        _supportsAnimationTimeline: {
          display: 'flex',
          position: 'sticky',
          top: '-10',
          height: '10',
          // @ts-ignore

          viewTimelineName: '[--nav]',
          viewTimelineInset: 'token(spacing.-10)',

          _before: {
            // @ts-ignore
            animationRange:
              '[exit-crossing 0% exit-crossing token(spacing.10)]',
          },
        },
      },
    })}
  >
    <div
      class={css({
        display: 'flex',
        height: 'full',
        flex: '1',

        _oneHanded: {
          _noAnimationTimeline: {
            zIndex: '[2]',
            position: 'sticky',
            top: '-16',
            height: '10',
          },
        },
      })}
    >
      <div
        class={css({
          flex: '1',

          backdropFilter: '[blur(0px)]',
          background: '[rgba(255,255,255,0)]',
          marginInline: '-2',
          paddingInline: '2',
          paddingBlock: '2',
          borderRadius: 'lg',

          sm: {
            marginInline: '-3',
            paddingInline: '3',
            paddingBlock: '3',
          },

          _supportsAnimationTimeline: {
            animation: '[navBlur ease forwards]',
            animationTimeline: '[--nav]',
            // @ts-ignore
            animationRange: '[exit-crossing 0% exit-crossing 200px]',
          },

          '[data-nav-is-stuck] &': {
            animation: '[navBlur ease forwards 0.25s]',
          },

          _oneHanded: {
            '[data-nav-scroll-pos-is-below] &': {
              position: 'relative',
              top: '[calc(100dvh + token(spacing.10))]',
              transform:
                '[translateY(calc(-100% * calc(1 - var(--nav-intersection-ratio) ) ))]',
              transition: '[0.1s transform linear]',
            },
            _supportsAnimationTimeline: {
              animation:
                '[slideupAnchoredTop ease forwards, navBlur ease forwards]',
              animationTimeline: '[--nav]',
              // @ts-ignore
              animationRange:
                '[exit-crossing 0% exit-crossing token(spacing.10)]',
            },
          },
        })}
      >
        <nav
          aria-label="Primary Navigation"
          class={css({
            flex: '1',
            display: 'flex',
            flexDir: 'column',
            position: 'relative',
            zIndex: 'nav',

            sm: {
              flexDir: 'row',
              justifyContent: 'space-between',
              alignItems: 'center',
            },
          })}
        >
          <div
            class={css({
              display: 'flex',
              flexDir: 'row',
              columnGap: '2',
              justifyContent: 'space-between',
              _oneHanded: {
                _supportsAnimationTimeline: {
                  animation: '[slideupPrimaryNav ease forwards]',
                  animationTimeline: '[--nav]',
                  // @ts-ignore
                  animationRange:
                    '[exit-crossing 0% exit-crossing token(spacing.1)]',
                },
              },
              sm: {
                justifyContent: 'flex-start',
                columnGap: '3',
              },
            })}
          >
            <PageLink href="/">About</PageLink>
            <PageLink href="/experience">Experience</PageLink>
            <PageLink href="/blog">Thoughts</PageLink>
          </div>
          <nav
            aria-label="Sub Navigation"
            class={css({
              mt: '3',
              height: '6',
              display: 'flex',
              flexDir: 'row',
              flexWrap: 'wrap',
              columnGap: '3',
              ml: 'auto',

              _oneHanded: {
                '[data-nav-scroll-pos-is-below] &': {
                  transform: '[translateY(-80px)]',
                },
                _supportsAnimationTimeline: {
                  animation: '[slideupSubNav ease forwards]',
                  animationTimeline: '[--nav]',
                  // @ts-ignore
                  animationRange:
                    '[exit-crossing 0% exit-crossing token(spacing.1)]',
                },
              },

              sm: {
                display: 'flex',
                transform: '[translateY(180%)]',
                mt: '0',
                _supportsAnimationTimeline: {
                  animation: '[navSubNavDock ease forwards]',
                  animationTimeline: '[--nav]',
                  // @ts-ignore
                  animationRange: '[exit-crossing 0% exit-crossing 200px]',
                },

                '[data-nav-is-stuck] &': {
                  animation: '[navSubNavDock ease forwards 0.25s]',
                },
              },
            })}
          >
            <slot name="sub-nav" />
          </nav>
        </nav>
      </div>
    </div>
  </div>
</header>

<slot />
