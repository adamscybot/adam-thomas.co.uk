---
import type { CollectionEntry } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'
import Layout from './Layout.astro'
import { css } from '../styled-system/css'
import SectionLink from '../components/SectionLink.astro'

type Props = CollectionEntry<'blog'>['data']

const { title, description, pubDate, updatedDate, sectionLinks } = Astro.props
---

<Layout title={title} description={description}>
  <Fragment slot="sub-nav">
    {
      sectionLinks?.map((sectionLink) => (
        <SectionLink href={`#${sectionLink.link}`}>
          {sectionLink.name}
        </SectionLink>
      ))
    }
  </Fragment>
  <article
    class={css({
      color: 'text.body',

      '& h1, & h2, & h3': {
        color: 'text.header',
        mb: '10',
        mt: '20',
      },

      '& h1': {
        textStyle: 'header1',
      },

      '& h2': {
        textStyle: 'header2',
      },

      '& h3': {
        textStyle: 'header3',
      },

      '& p': {
        textAlign: 'justify',
        textStyle: 'body',
        color: 'text.body',
        mb: '10',
        lineHeight: '[1.9]',
      },

      '& ul': {
        listStyleType: '[circle]',
        listStylePosition: 'inside',
        ml: '5',
      },

      '& a': {
        textStyle: 'link',
        color: 'slate.50',
      },
    })}
  >
    <div class="prose">
      <div class="title">
        <div class="date">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <h1 class={css({ mt: '[0 !important]' })}>{title}</h1>
      </div>
      <slot />
    </div>
  </article>
</Layout>
