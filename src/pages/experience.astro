---
import Layout from '../layouts/Layout.astro'
import BodyParagraph from '../components/BodyParagraph.astro'
import BodySection from '../components/BodySection.astro'
import ExperienceEntry from '../components/ExperienceEntry.astro'
import Link from '../components/Link.astro'
import SectionLink from '../components/SectionLink.astro'
---

{
  /*
   * The experience page has a "timeline" type view and the animations are designed to enhance that feeling
   * by way of subtle motion downwards as the user scrolls. The animation avoids wasting user time by acting intelligently
   * if the user enters the page further down (fragment URL or maintaining scroll posiiton on refresh) by intelligently
   * disabling animations "above the fold" and so animating downwards only from where they started.
   *
   * The behaviour is quite specific and so I wrote this custom animation code for scroll triggered animations.
   * No JS and prefer reduced motion also supported.
   *
   * Having a script that reaches into children like this feels odd as it's something you wouldn't do in React,
   * but I'm sticking to pure Astro as much as possible. Decided to hand roll this for maximum performance and to get the
   * desired behaviour just right. For example, we are not wasting the users time if they enter the page on a scrolled down state. */
}
<script>
  /** Identified the parent DOM node that acts as set of elements that are animated  */
  const ANIMATION_GROUP_ATTR = 'animation-group'

  /** Threshold option used with `IntersectionObserver` */
  const THRESHOLD = 0.7

  /**  Index that represents the animation group that is the current upper bound target to animate up to */
  let animateToTargetIndex: number = -1

  /** Index that represents the last animation group that has completed its animation  */
  let animationCompleteIndex: number = -1

  /** Wether the first intersection event has already been handled or not. */
  let initialVisibilityComplete: boolean = false

  const isAnimationInProgress = () =>
    animationCompleteIndex < animateToTargetIndex

  const getAllAnimatedElements = () =>
    document.querySelectorAll<HTMLElement>(`[data-${ANIMATION_GROUP_ATTR}]`)

  const getElementAtAnimationIndex = (index: number) => {
    const element = document.querySelector<HTMLElement>(
      `[data-${ANIMATION_GROUP_ATTR}='${index}']`,
    )
    if (!element)
      throw new Error(`Couldn't fine element with animation index ${index}`)

    return element
  }

  const getElementsUpToAnimationIndex = (index: number) =>
    [...Array(animationCompleteIndex + 1).keys()].map((index) =>
      getElementAtAnimationIndex(index),
    )

  const skipAnimationForElements = (elements: HTMLElement[]) =>
    elements.forEach((el) => {
      el.removeEventListener('transitionend', handleTransitionEnd)
      el.dataset.animateDisable = 'true'
    })

  const getAnimationIndexOfElement = (element: HTMLElement) =>
    parseInt(element.dataset.animationGroup ?? '-1')

  const triggerAnimation = (element: HTMLElement) => {
    element.dataset.animate = 'true'
  }

  const handleTransitionEnd = function (
    this: HTMLElement,
    event: TransitionEvent,
  ) {
    if ((event.target as HTMLElement).dataset.animationEndsGroup === undefined)
      return

    const animationIndex = getAnimationIndexOfElement(this)
    animationCompleteIndex = animationIndex

    if (animationIndex >= animateToTargetIndex) return

    const nextElToAnimate = getElementAtAnimationIndex(animationIndex + 1)
    triggerAnimation(nextElToAnimate)

    this.removeEventListener('transitionend', handleTransitionEnd)
  }

  type VisibilityOffsets = {
    lastVisible: number
    firstVisible: number
  }

  /**
   * When the user loads the page, it could be much further down due to
   * scroll restoration or because they are navigating to a fragment.
   *
   * We want the user to see the animation quickly after load, and we want
   * to disable (force animations to end state) the animation of elements
   * that were further up the page since the experience timeline is temporal
   * and the animations only make sense when progressing down the page.
   *
   */
  const processInitialIntersection = (offsets: VisibilityOffsets) => {
    initialVisibilityComplete = true

    if (offsets.firstVisible > 0) {
      animationCompleteIndex = Math.max(0, offsets.firstVisible - 1)
      animateToTargetIndex = animationCompleteIndex
      skipAnimationForElements(
        getElementsUpToAnimationIndex(animationCompleteIndex),
      )
    }
  }

  const observer = new IntersectionObserver(
    (entries) => {
      /** The indexes representing the range of animation groups currently visible on screen */
      const offsets = entries.reduce<{
        lastVisible: number
        firstVisible: number
      }>(
        (furthestTarget, currentEntry) => {
          if (!currentEntry.isIntersecting) return furthestTarget
          let newOffsets = furthestTarget

          const target = currentEntry.target as HTMLElement
          const currentAnimationIndex = getAnimationIndexOfElement(target)

          // We dont animate again after it's already triggered so there's no need to keep watching.
          observer.unobserve(target)

          if (furthestTarget.firstVisible === -1) {
            newOffsets = { ...newOffsets, firstVisible: currentAnimationIndex }
          }

          if (currentAnimationIndex > furthestTarget.lastVisible) {
            newOffsets = { ...newOffsets, lastVisible: currentAnimationIndex }
          }

          return newOffsets
        },
        { lastVisible: -1, firstVisible: -1 },
      )

      if (!initialVisibilityComplete) {
        processInitialIntersection(offsets)
      }

      if (offsets.lastVisible > animateToTargetIndex) {
        // If animation is already in progress it will be triggered by the transition event handler
        // when the previous animation group finishes. If it's not in progress we need to manually
        // trigger the animation to start a new cascade.
        if (!isAnimationInProgress()) {
          triggerAnimation(
            getElementAtAnimationIndex(animationCompleteIndex + 1),
          )
        }
        animateToTargetIndex = offsets.lastVisible
      }
    },
    {
      root: null,
      rootMargin: '0px',
      threshold: THRESHOLD,
    },
  )

  const resetAnimations = () => {
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) return

    animateToTargetIndex = -1
    animationCompleteIndex = -1

    const animatedElements = getAllAnimatedElements()
    animatedElements.forEach((el) => {
      el.addEventListener('transitionend', handleTransitionEnd)
      observer.observe(el)
    })
  }

  // Handle both full page refresh and in-app navigation provided by Astro View Transitions.
  document.addEventListener('astro:page-load', resetAnimations, { once: false })
</script>

<Layout>
  <Fragment slot="sub-nav">
    <SectionLink href="#employment">Employment</SectionLink>
    <SectionLink href="#education">Education</SectionLink>
  </Fragment>

  <BodySection id="employment" title="Employment">
    <ExperienceEntry
      org="Informatica"
      position="Engineering Manager"
      startDate={new Date('2023-08-01')}
      transitionType="acquisition"
      animationIndex={0}
    >
      <BodyParagraph>
        Privitar was <Link
          href="https://www.informatica.com/blogs/welcome-to-the-informatica-family-privitar.html"
          target="_blank"
        >
          recently acquired
        </Link> by Informatica. I have continued my role within Informatica,
        with a renewed focus on integrating Privitar's data security and privacy
        products into Informatica's existing platform.
      </BodyParagraph>
      <BodyParagraph>
        As an Engineering Manager I have a key role in ensuring a smooth
        transition. I am also involved in integration work relating to the UI of
        the products.
      </BodyParagraph>
    </ExperienceEntry>
    <ExperienceEntry
      org="Privitar"
      position="Engineering Manager"
      startDate={new Date('2021-08-01')}
      endDate={new Date('2023-08-01')}
      transitionType="promotion"
      animationIndex={1}
    >
      <BodyParagraph>
        My role expanded to include Engineering Management responsbilities. I am
        responsible for the engineers in my team, including creating an
        environment for them in which they can thrive. I have continued to grow
        the companies UI function, which positively impacted our product. I work
        closely with UX and Product to deliver product features and facilitate
        alignment of my team.
      </BodyParagraph>
      <BodyParagraph>
        I designed and oversaw a move from a horizontal UI team to a vertical
        structure with UI devs integrated with other teams; as well as the
        formation of a new UI Initiatives team.
      </BodyParagraph>
      <BodyParagraph>
        For part of this period I also managed the Platform team, which tackled
        the core architecture of the product. Many features were delivered
        between my time between UI and Platform.
      </BodyParagraph>
      <BodyParagraph>
        I also work on tasks directly, and sit on the Architecture Forum to
        represent Front End interests.
      </BodyParagraph>
    </ExperienceEntry>
    <ExperienceEntry
      org="Privitar"
      position="Front End Technical Lead"
      startDate={new Date('2019-08-01')}
      endDate={new Date('2021-08-01')}
      transitionType="new-role"
      animationIndex={2}
    >
      <BodyParagraph>
        I joined Privitar as their first front-end lead to spearheaded the
        creation of the UI team from the ground up, with the goal of modernizing
        the front-end infrastructure for both new and existing products.
      </BodyParagraph>
      <BodyParagraph>
        The team worked on the removal of a legacy UI framework that was
        replaced by React and TypeScript; with the view to an ambitious UI road
        map. The project involved a significant conversion of an existing
        enterprise Java UI application based on Vaadin. My responsibilities also
        included line management.
      </BodyParagraph>
      <BodyParagraph>
        I continued to on-board Java/back end developers onto the UI stack in
        this position, in tandem with my belief that a good front end team must
        understand all aspects of the product.
      </BodyParagraph>
      <BodyParagraph>
        The project involved the creation of a new React based framework to make
        building screens using the new APIs as simple as possible to improve dev
        efficiency. I was responsible for the technical leadership in
        architecting this framework, documenting it and mentoring my colleagues.
      </BodyParagraph>
      <BodyParagraph />
    </ExperienceEntry>
    <ExperienceEntry
      org="Alfa Financial Software"
      position="Development Lead"
      startDate={new Date('2017-11-01')}
      endDate={new Date('2019-08-01')}
      transitionType="promotion"
      animationIndex={3}
    >
      <BodyParagraph>
        I continued my responsibilities as lead for the companies UI developer
        team, working on a vast transformation of Alfa’s core product (in house
        UI framework) to a single page application (React/TypeScript). This work
        is at a high scale; working on an enterprise application that comprises
        of hundreds of screens.
      </BodyParagraph>
      <BodyParagraph>
        I actively maintained and delivered UI training inside the company, and
        mentored colleagues on our UI stack.
      </BodyParagraph>
      <BodyParagraph>
        I architected the companies underlying UI framework which was used to
        deliver features to clients in the asset finance industry.
      </BodyParagraph>
    </ExperienceEntry>

    <ExperienceEntry
      org="Alfa Financial Software"
      position="Senior Consultant"
      startDate={new Date('2017-01-01')}
      endDate={new Date('2017-11-01')}
      transitionType="new-role"
      animationIndex={4}
    >
      <BodyParagraph>
        I joined Alfa's R&D team as a JavaScript expert to work on the front end
        of Alfa's best-in-class asset finance management platform. Alfa had
        recently completed an IPO.
      </BodyParagraph>
      <BodyParagraph>
        I drove transformative web & mobile projects within the company using
        React, React Native and a modern JS stack.
      </BodyParagraph>
      <BodyParagraph>
        I led the development of a substantial technical and design restructure
        of the products existing enterprise-scale UI. In addition, I applied my
        UI knowledge to new R&D greenfield initiatives within the company for
        web & mobile.
      </BodyParagraph>
      <BodyParagraph>
        As part of my work, I developed a visual interface for a credit decision
        system, and improved the application performance by 30% via conversion
        to an SPA.
      </BodyParagraph>
    </ExperienceEntry>

    <ExperienceEntry
      org="Five By Five"
      position="Head of Development"
      startDate={new Date('2016-01-01')}
      endDate={new Date('2016-12-01')}
      transitionType="promotion"
      animationIndex={5}
    >
      <BodyParagraph>
        Managing a small team of developers, I am responsible for the technical
        strategy and delivery of Five By Five's web and mobile projects.
      </BodyParagraph>
      <BodyParagraph>
        I had a key role throughout these projects in communicating with clients
        and determining their requirements.
      </BodyParagraph>
      <BodyParagraph>
        This remained a very hands on role. I primarily worked with a Node,
        Express, React and Redux stack to achieve deliverables on tight
        timescales. This work was very varied and included a social app for
        wine, calculators for opticians, brand sites for high street stores,
        customer feedback systems, and more.
      </BodyParagraph>
      <BodyParagraph>
        During this role I introduced the company to CI (Gitlab CI) and server
        automation (Ansible) as part of a significant dev ops restructure.
      </BodyParagraph>
    </ExperienceEntry>
    <ExperienceEntry
      org="Five By Five"
      position="Senior Developer"
      startDate={new Date('2014-12-01')}
      endDate={new Date('2016-01-01')}
      transitionType="new-role"
      animationIndex={6}
    >
      <BodyParagraph>
        I contributed to Five By Five's web technology projects for clients such
        as Activision, 2K, GAP and CooperVision.
      </BodyParagraph>
      <BodyParagraph>
        As Senior Developer, I was involved in all aspects of the software
        development lifecycle. By utilising my expertise in modern web
        applications that I bought to the team, I was able to produce new and
        engaging experiences for Five By Five's many projects. I introduced a
        Node, Express, React and Redux stack to the team, which became a core
        part of our work.
      </BodyParagraph>
    </ExperienceEntry>
    <ExperienceEntry
      org="Ad Venture TV (inqb8r)"
      position="Head of Technology"
      startDate={new Date('2013-07-01')}
      endDate={new Date('2014-12-01')}
      transitionType="new-role"
      animationIndex={7}
      last={true}
    >
      <BodyParagraph>
        Ad Venture was an early stage startup that provided targeted, frame
        accurate ad switching and ad delivery platforms for live TV, based on
        new streaming technologies.
      </BodyParagraph>
      <BodyParagraph>
        As the Lead Developer & Head of Technology, I shaped our core platform
        and technical strategy by building and scaling back and front end
        systems. I was deeply involved in forging the direction of the business
        and negotiating partnerships with other technology providers.
      </BodyParagraph>
      <BodyParagraph>
        This remained a very hands on role. I primarily worked with a Node,
        Express, React and Redux stack to achieve deliverables on tight
        timescales. This work was very varied and included a social app for
        wine, calculators for opticians, brand sites for high street stores,
        customer feedback systems, and more.
      </BodyParagraph>
    </ExperienceEntry>
  </BodySection>
  <BodySection id="education" title="Education">
    <ExperienceEntry
      org="University of Southampton"
      position="Computer Science MEng"
      startDate={new Date('2009-09-01')}
      endDate={new Date('2013-08-01')}
      animationIndex={8}
    >
      <BodyParagraph>
        I consistently achieved 1st class grades on average for all 4 years of
        my degree. I won an award for the "Best Final Year Student on the
        Computer Science & Software Engineering course at University of
        Southampton" from the British Computer Society Hampshire Branch.
      </BodyParagraph>
      <BodyParagraph>
        In the final masters year, I focused primarily on Web Science and
        programming the web. The course at the University of Southampton
        contains strong individual and group elements. From a technical
        perspective the course focuses primarily on Java, but in the latter
        years gives a wider variation and focus on web services stacks.
      </BodyParagraph>
    </ExperienceEntry>
    <ExperienceEntry
      org="School/College"
      position="UK GCSEs & A-Levels"
      startDate={new Date('2001-08-01')}
      endDate={new Date('2009-08-01')}
      animationIndex={9}
    >
      <BodyParagraph>
        Despite knowing prospects are unlikely to care, im very proud to have
        received nine A*'s at GCSE level 🤓. For the A-Level courses I achieved
        AAAB (full A2) in Physics, Electronics, Computing and Maths
        respectively.
      </BodyParagraph>
    </ExperienceEntry>
  </BodySection>
</Layout>
